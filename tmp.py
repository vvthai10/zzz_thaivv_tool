import numpy as np
import cv2
from typing import List, Dict, Any

def convert_mask_to_polygon(shapes: List[Dict[str, Any]], image_width: int, image_height: int) -> List[Dict[str, Any]]:
    """
    Convert mask shapes (RLE-encoded) to polygon shapes, mimicking aa.min.js logic.
    
    Args:
        shapes: List of shape dictionaries with 'type', 'points', etc.
        image_width: Width of the original image.
        image_height: Height of the original image.
    
    Returns:
        List of shape dictionaries with mask shapes converted to polygons.
    """
    def check_mask(points: List[float]) -> None:
        """Validate RLE data sum equals mask area."""
        x, y, width, height = map(float, points[-4:])
        width, height = int(width), int(height)
        rle_sum = sum(points[:-4])
        expected_size = (width - x + 1) * (height - y + 1)
        if rle_sum != expected_size:
            raise ValueError(f"Incorrect mask, RLE sum ({rle_sum}) != mask dimension ({expected_size})")

    def rle_to_mask(rle_data: List[float], width: int, height: int) -> np.ndarray:
        """Decode RLE data into a binary mask."""
        mask = np.zeros(height * width, dtype=np.uint8)
        current_pos = 0
        value = 0  # Start with background (0)
        
        for count in rle_data:
            mask[current_pos:current_pos + int(count)] = value
            current_pos += int(count)
            value = 1 - value  # Toggle between 0 and 1
        
        return mask.reshape((height, width))

    def mask_to_polygon(points: List[float]) -> List[List[float]]:
        """Convert RLE mask to polygon points, replicating aa.min.js logic."""
        # Extract bounding box
        x, y, width, height = map(float, points[-4:])
        width, height = int(width - x + 1), int(height - y + 1)
        rle_data = points[:-4]
        
        # Validate mask
        check_mask(points)
        
        # Decode RLE to binary mask
        mask = rle_to_mask(rle_data, width, height)
        
        # Add 1-pixel border (mimics cv.copyMakeBorder)
        bordered_mask = cv2.copyMakeBorder(
            mask, 1, 1, 1, 1, cv2.BORDER_CONSTANT, value=0
        )
        
        # Dilate the mask (mimics cv.dilate with 2x2 kernel)
        kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (2, 2))
        dilated_mask = cv2.dilate(
            bordered_mask, kernel, iterations=1, borderType=cv2.BORDER_CONSTANT, borderValue=0
        )
        
        # Find contours
        contours, _ = cv2.findContours(
            dilated_mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE
        )
        
        # Process contours
        valid_contours = []
        for contour in contours:
            # Adjust for border (subtract 1 from coordinates)
            contour = contour - 1
            # Filter contours with fewer than 3 vertices (6 points)
            if len(contour) < 6:
                continue
            # Simplify contour
            epsilon = 1.0  # Default from aa.min.js
            approx = cv2.approxPolyDP(contour, epsilon, closed=True)
            # Apply bounding box offset
            approx = approx + np.array([x, y], dtype=np.float32)
            # Convert to flat list of [x, y]
            points = approx[:, 0, :].flatten().tolist()
            if len(points) >= 6:  # Ensure at least 3 vertices
                valid_contours.append(points)
        
        if not valid_contours:
            raise ValueError("Empty contour received from state")
        
        return valid_contours

    converted_shapes = []
    warnings = []
    
    for shape in shapes:
        if shape.get('type') != 'mask':
            converted_shapes.append(shape.copy())
            continue
        
        try:
            # Convert mask to polygons
            polygons = mask_to_polygon(shape['points'])
            
            # Create a new shape for each contour (mimics aa.min.js returning multiple contours)
            for polygon_points in polygons:
                new_shape = shape.copy()
                new_shape['type'] = 'polygon'
                new_shape['points'] = polygon_points
                converted_shapes.append(new_shape)
        
        except Exception as e:
            warnings.append(f"Error converting shape ID {shape.get('id')}: {str(e)}")
            converted_shapes.append(shape.copy())
    
    if warnings:
        print("Warnings:", warnings)
    
    return converted_shapes

# Example usage:
if __name__ == "__main__":
    sample_shapes = [
        {
    "type": "mask",
    "clientID": 2,
    "occluded": False,
    "outside": False,
    "z_order": 0,
    "points": [
        152,
        1,
        229,
        4,
        226,
        6,
        225,
        8,
        222,
        11,
        219,
        13,
        217,
        16,
        215,
        17,
        213,
        20,
        210,
        23,
        207,
        25,
        205,
        28,
        203,
        30,
        200,
        32,
        198,
        35,
        195,
        36,
        194,
        37,
        194,
        36,
        194,
        36,
        194,
        37,
        138,
        1,
        54,
        37,
        138,
        2,
        54,
        36,
        137,
        4,
        53,
        36,
        137,
        5,
        52,
        37,
        135,
        7,
        51,
        37,
        135,
        8,
        50,
        37,
        134,
        10,
        50,
        36,
        134,
        11,
        49,
        37,
        133,
        12,
        48,
        37,
        134,
        12,
        47,
        37,
        134,
        12,
        48,
        38,
        133,
        12,
        47,
        39,
        132,
        13,
        46,
        41,
        130,
        14,
        45,
        43,
        129,
        14,
        44,
        45,
        127,
        15,
        44,
        45,
        126,
        16,
        43,
        74,
        98,
        16,
        42,
        77,
        95,
        17,
        41,
        80,
        93,
        17,
        40,
        83,
        90,
        18,
        40,
        85,
        87,
        18,
        40,
        88,
        85,
        18,
        39,
        90,
        83,
        18,
        39,
        93,
        80,
        18,
        40,
        95,
        78,
        18,
        39,
        98,
        75,
        18,
        39,
        101,
        73,
        17,
        39,
        104,
        70,
        17,
        39,
        104,
        70,
        18,
        39,
        104,
        70,
        17,
        39,
        104,
        70,
        17,
        39,
        104,
        69,
        19,
        38,
        105,
        68,
        19,
        38,
        105,
        67,
        20,
        39,
        104,
        67,
        21,
        38,
        105,
        65,
        22,
        38,
        105,
        65,
        23,
        37,
        105,
        64,
        25,
        37,
        105,
        63,
        26,
        36,
        105,
        62,
        28,
        35,
        105,
        62,
        29,
        34,
        106,
        60,
        31,
        33,
        106,
        59,
        34,
        31,
        107,
        58,
        37,
        28,
        107,
        57,
        40,
        26,
        107,
        57,
        43,
        23,
        108,
        55,
        46,
        21,
        108,
        55,
        49,
        19,
        107,
        54,
        52,
        17,
        108,
        53,
        55,
        14,
        108,
        52,
        58,
        12,
        108,
        52,
        61,
        9,
        109,
        50,
        64,
        7,
        109,
        50,
        67,
        4,
        109,
        49,
        70,
        2,
        110,
        48,
        182,
        49,
        182,
        49,
        182,
        49,
        182,
        49,
        181,
        50,
        181,
        50,
        181,
        50,
        181,
        50,
        181,
        50,
        181,
        51,
        179,
        52,
        179,
        52,
        179,
        52,
        179,
        52,
        179,
        52,
        179,
        52,
        178,
        53,
        178,
        53,
        178,
        53,
        178,
        53,
        178,
        53,
        178,
        53,
        177,
        54,
        177,
        54,
        177,
        54,
        177,
        54,
        177,
        54,
        177,
        54,
        176,
        55,
        176,
        56,
        175,
        56,
        175,
        56,
        175,
        56,
        175,
        56,
        174,
        57,
        174,
        57,
        174,
        57,
        174,
        57,
        174,
        57,
        174,
        57,
        173,
        58,
        173,
        58,
        173,
        58,
        173,
        58,
        173,
        58,
        173,
        58,
        172,
        59,
        172,
        59,
        172,
        59,
        172,
        60,
        171,
        60,
        170,
        61,
        170,
        61,
        170,
        61,
        170,
        61,
        170,
        61,
        170,
        61,
        169,
        62,
        169,
        62,
        169,
        62,
        169,
        62,
        169,
        62,
        168,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        167,
        64,
        167,
        64,
        167,
        65,
        166,
        65,
        166,
        65,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        163,
        68,
        163,
        68,
        163,
        68,
        163,
        68,
        163,
        68,
        162,
        69,
        162,
        70,
        161,
        70,
        161,
        70,
        161,
        70,
        160,
        71,
        160,
        71,
        160,
        71,
        160,
        71,
        160,
        71,
        159,
        72,
        159,
        72,
        159,
        72,
        159,
        72,
        159,
        71,
        160,
        71,
        159,
        72,
        159,
        72,
        159,
        72,
        159,
        72,
        159,
        72,
        158,
        72,
        159,
        72,
        159,
        72,
        159,
        72,
        159,
        72,
        159,
        72,
        159,
        72,
        159,
        71,
        160,
        71,
        160,
        71,
        160,
        71,
        159,
        72,
        159,
        72,
        159,
        72,
        159,
        71,
        160,
        71,
        160,
        71,
        160,
        71,
        160,
        71,
        160,
        71,
        160,
        71,
        160,
        70,
        161,
        70,
        161,
        70,
        161,
        70,
        161,
        70,
        161,
        70,
        161,
        70,
        160,
        71,
        160,
        70,
        161,
        70,
        161,
        70,
        161,
        70,
        161,
        70,
        161,
        70,
        161,
        70,
        161,
        69,
        162,
        69,
        162,
        69,
        162,
        69,
        162,
        69,
        162,
        69,
        162,
        69,
        162,
        68,
        163,
        68,
        162,
        69,
        162,
        69,
        162,
        69,
        162,
        69,
        162,
        69,
        162,
        68,
        163,
        68,
        163,
        68,
        163,
        68,
        163,
        68,
        163,
        68,
        163,
        68,
        163,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        163,
        68,
        163,
        68,
        163,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        65,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        65,
        166,
        65,
        166,
        65,
        166,
        65,
        166,
        65,
        166,
        65,
        166,
        65,
        166,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        166,
        65,
        166,
        65,
        166,
        65,
        166,
        65,
        166,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        63,
        168,
        63,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        167,
        64,
        167,
        64,
        167,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        168,
        62,
        168,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        168,
        63,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        166,
        65,
        166,
        65,
        166,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        167,
        64,
        166,
        65,
        166,
        65,
        166,
        65,
        166,
        65,
        166,
        65,
        166,
        65,
        166,
        65,
        166,
        65,
        166,
        65,
        166,
        65,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        165,
        66,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        163,
        68,
        163,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        164,
        67,
        163,
        68,
        163,
        68,
        163,
        68,
        163,
        68,
        163,
        68,
        163,
        68,
        163,
        68,
        163,
        68,
        163,
        68,
        163,
        68,
        162,
        66,
        1,
        2,
        162,
        66,
        1,
        2,
        162,
        65,
        2,
        2,
        162,
        65,
        2,
        2,
        162,
        65,
        2,
        2,
        162,
        64,
        3,
        2,
        162,
        64,
        3,
        2,
        162,
        64,
        3,
        2,
        162,
        64,
        3,
        2,
        162,
        63,
        4,
        2,
        161,
        64,
        4,
        2,
        161,
        64,
        4,
        2,
        161,
        63,
        5,
        2,
        161,
        63,
        5,
        2,
        161,
        63,
        5,
        2,
        161,
        62,
        6,
        2,
        161,
        62,
        6,
        2,
        161,
        62,
        6,
        2,
        161,
        61,
        7,
        2,
        161,
        61,
        7,
        2,
        160,
        62,
        7,
        1,
        161,
        61,
        8,
        1,
        161,
        61,
        8,
        1,
        161,
        61,
        8,
        1,
        161,
        61,
        8,
        1,
        161,
        60,
        9,
        1,
        161,
        60,
        9,
        1,
        161,
        60,
        9,
        1,
        161,
        59,
        10,
        1,
        161,
        59,
        10,
        1,
        160,
        60,
        10,
        1,
        160,
        59,
        11,
        1,
        160,
        59,
        11,
        1,
        160,
        59,
        172,
        58,
        173,
        58,
        173,
        58,
        173,
        57,
        174,
        57,
        174,
        57,
        173,
        58,
        173,
        57,
        174,
        57,
        174,
        57,
        174,
        56,
        175,
        56,
        175,
        56,
        175,
        55,
        176,
        55,
        176,
        55,
        175,
        55,
        18,
        1,
        157,
        55,
        18,
        1,
        157,
        55,
        18,
        1,
        157,
        54,
        19,
        1,
        157,
        54,
        19,
        1,
        157,
        54,
        19,
        1,
        157,
        54,
        19,
        1,
        157,
        53,
        20,
        1,
        157,
        53,
        20,
        1,
        157,
        53,
        20,
        1,
        156,
        53,
        21,
        1,
        156,
        53,
        21,
        1,
        156,
        53,
        21,
        1,
        156,
        53,
        21,
        1,
        156,
        53,
        21,
        1,
        156,
        53,
        21,
        1,
        156,
        54,
        20,
        1,
        156,
        54,
        20,
        1,
        156,
        54,
        20,
        1,
        156,
        54,
        20,
        1,
        155,
        55,
        20,
        2,
        154,
        11,
        1,
        43,
        20,
        2,
        154,
        9,
        2,
        1,
        5,
        38,
        20,
        2,
        154,
        6,
        1,
        10,
        5,
        33,
        20,
        2,
        154,
        23,
        4,
        28,
        20,
        2,
        154,
        28,
        4,
        23,
        20,
        2,
        154,
        33,
        4,
        19,
        19,
        2,
        154,
        39,
        1,
        16,
        19,
        2,
        154,
        56,
        19,
        2,
        154,
        44,
        1,
        11,
        19,
        2,
        154,
        44,
        1,
        11,
        19,
        2,
        155,
        43,
        1,
        9,
        21,
        2,
        155,
        43,
        1,
        7,
        23,
        2,
        155,
        43,
        2,
        3,
        26,
        2,
        155,
        42,
        3,
        1,
        28,
        2,
        155,
        41,
        33,
        2,
        155,
        1,
        5,
        34,
        33,
        3,
        161,
        33,
        34,
        3,
        160,
        33,
        35,
        3,
        160,
        33,
        35,
        3,
        160,
        32,
        36,
        4,
        158,
        32,
        37,
        4,
        158,
        31,
        38,
        4,
        157,
        31,
        39,
        4,
        157,
        30,
        40,
        4,
        156,
        30,
        41,
        4,
        156,
        29,
        42,
        4,
        155,
        28,
        44,
        4,
        155,
        27,
        45,
        4,
        154,
        27,
        46,
        4,
        154,
        26,
        47,
        4,
        153,
        25,
        49,
        4,
        153,
        24,
        50,
        4,
        153,
        23,
        51,
        4,
        154,
        21,
        52,
        4,
        154,
        19,
        54,
        4,
        154,
        18,
        55,
        4,
        154,
        17,
        56,
        4,
        155,
        15,
        57,
        4,
        155,
        13,
        59,
        4,
        155,
        12,
        60,
        5,
        154,
        11,
        61,
        5,
        226,
        5,
        226,
        5,
        226,
        5,
        226,
        5,
        226,
        5,
        226,
        5,
        226,
        5,
        226,
        5,
        226,
        5,
        226,
        5,
        226,
        5,
        226,
        5,
        226,
        5,
        226,
        5,
        225,
        6,
        225,
        6,
        225,
        6,
        225,
        6,
        225,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        7,
        224,
        8,
        223,
        8,
        223,
        8,
        223,
        8,
        223,
        8,
        223,
        8,
        223,
        8,
        223,
        8,
        223,
        8,
        223,
        8,
        223,
        8,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        9,
        222,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        221,
        10,
        220,
        11,
        220,
        11,
        220,
        11,
        220,
        11,
        220,
        11,
        220,
        11,
        220,
        11,
        220,
        11,
        220,
        11,
        220,
        11,
        220,
        11,
        220,
        11,
        220,
        11,
        220,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        219,
        12,
        218,
        13,
        218,
        13,
        218,
        13,
        218,
        13,
        218,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        14,
        217,
        15,
        216,
        15,
        216,
        15,
        216,
        15,
        216,
        15,
        216,
        15,
        216,
        15,
        216,
        15,
        216,
        15,
        216,
        15,
        216,
        16,
        215,
        16,
        215,
        16,
        215,
        16,
        215,
        16,
        215,
        16,
        214,
        17,
        214,
        17,
        214,
        17,
        214,
        18,
        213,
        18,
        213,
        18,
        213,
        18,
        213,
        18,
        213,
        18,
        213,
        18,
        213,
        18,
        213,
        18,
        213,
        18,
        213,
        19,
        212,
        19,
        212,
        19,
        212,
        19,
        212,
        19,
        212,
        19,
        212,
        19,
        212,
        19,
        212,
        19,
        212,
        20,
        211,
        20,
        211,
        20,
        211,
        20,
        210,
        21,
        210,
        21,
        210,
        21,
        210,
        21,
        210,
        21,
        210,
        21,
        210,
        22,
        209,
        22,
        209,
        22,
        209,
        22,
        209,
        22,
        209,
        22,
        208,
        23,
        208,
        23,
        208,
        23,
        208,
        24,
        207,
        24,
        207,
        24,
        207,
        24,
        207,
        24,
        207,
        24,
        207,
        24,
        207,
        24,
        207,
        24,
        206,
        25,
        206,
        26,
        205,
        26,
        205,
        26,
        205,
        26,
        205,
        26,
        205,
        27,
        204,
        27,
        204,
        28,
        203,
        28,
        203,
        29,
        202,
        29,
        201,
        31,
        200,
        31,
        200,
        32,
        199,
        32,
        199,
        33,
        198,
        33,
        198,
        34,
        195,
        36,
        191,
        41,
        186,
        45,
        182,
        50,
        165,
        66,
        163,
        69,
        157,
        74,
        144,
        7,
        6,
        75,
        141,
        92,
        138,
        95,
        134,
        99,
        131,
        102,
        128,
        104,
        125,
        108,
        122,
        111,
        118,
        115,
        71,
        43,
        1,
        116,
        66,
        165,
        60,
        171,
        54,
        177,
        49,
        182,
        43,
        145,
        263,
        53,
        493,
        825
    ],
    "rotation": 0,
    "attributes": [],
    "elements": [],
    "frame": 0,
    "label_id": 72,
    "group": 0,
    "source": "file"
}
    ]

    image_width = 1920
    image_height = 1080

    converted = convert_mask_to_polygon(sample_shapes, image_width, image_height)
    print("Converted shapes:")
    for shape in converted:
        print(shape['points'])
        # print(f"Shape ID {shape['id']}: type={shape['type']}, points={shape['points'][:10]}... (total {len(shape['points'])} points)")